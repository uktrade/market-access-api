[[package]]
name = "amqp"
version = "5.2.0"
description = "Low-level AMQP client for Python (fork of amqplib)."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
vine = ">=5.0.0,<6.0.0"

[[package]]
name = "appnope"
version = "0.1.3"
description = "Disable App Nap on macOS >= 10.9"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "asgiref"
version = "3.7.2"
description = "ASGI specs, helper code, and adapters"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = {version = ">=4", markers = "python_version < \"3.11\""}

[package.extras]
tests = ["pytest", "pytest-asyncio", "mypy (>=0.800)"]

[[package]]
name = "astroid"
version = "3.0.1"
description = "An abstract syntax tree for Python with inference support."
category = "dev"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
typing-extensions = {version = ">=4.0.0", markers = "python_version < \"3.11\""}

[[package]]
name = "asttokens"
version = "2.4.1"
description = "Annotate AST trees with source code positions"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.12.0"

[package.extras]
astroid = ["astroid (>=1,<2)", "astroid (>=2,<4)"]
test = ["pytest", "astroid (>=1,<2)", "astroid (>=2,<4)"]

[[package]]
name = "async-timeout"
version = "4.0.3"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "backcall"
version = "0.2.0"
description = "Specifications for callback functions passed in to an API"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "backports.zoneinfo"
version = "0.2.1"
description = "Backport of the standard library zoneinfo module"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
tzdata = {version = "*", optional = true, markers = "extra == \"tzdata\""}

[package.extras]
tzdata = ["tzdata"]

[[package]]
name = "billiard"
version = "3.6.4.0"
description = "Python multiprocessing fork with improvements and bugfixes"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "black"
version = "22.3.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
typing-extensions = {version = ">=3.10.0.0", markers = "python_version < \"3.10\""}

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.7.4)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "boto3"
version = "1.17.112"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
botocore = ">=1.20.112,<1.21.0"
jmespath = ">=0.7.1,<1.0.0"
s3transfer = ">=0.4.0,<0.5.0"

[[package]]
name = "boto3-stubs"
version = "1.17.112"
description = "Type annotations for boto3 1.17.112, generated by mypy-boto3-buider 5.0.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
botocore-stubs = "*"

[package.extras]
accessanalyzer = ["mypy-boto3-accessanalyzer (>=1.17.107)"]
acm = ["mypy-boto3-acm (>=1.17.107)"]
acm-pca = ["mypy-boto3-acm-pca (>=1.17.107)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (>=1.17.107)"]
all = ["mypy-boto3-accessanalyzer (>=1.17.107)", "mypy-boto3-acm (>=1.17.107)", "mypy-boto3-acm-pca (>=1.17.107)", "mypy-boto3-alexaforbusiness (>=1.17.107)", "mypy-boto3-amp (>=1.17.107)", "mypy-boto3-amplify (>=1.17.107)", "mypy-boto3-amplifybackend (>=1.17.107)", "mypy-boto3-apigateway (>=1.17.107)", "mypy-boto3-apigatewaymanagementapi (>=1.17.107)", "mypy-boto3-apigatewayv2 (>=1.17.107)", "mypy-boto3-appconfig (>=1.17.107)", "mypy-boto3-appflow (>=1.17.107)", "mypy-boto3-appintegrations (>=1.17.107)", "mypy-boto3-application-autoscaling (>=1.17.107)", "mypy-boto3-application-insights (>=1.17.107)", "mypy-boto3-applicationcostprofiler (>=1.17.107)", "mypy-boto3-appmesh (>=1.17.107)", "mypy-boto3-apprunner (>=1.17.107)", "mypy-boto3-appstream (>=1.17.107)", "mypy-boto3-appsync (>=1.17.107)", "mypy-boto3-athena (>=1.17.107)", "mypy-boto3-auditmanager (>=1.17.107)", "mypy-boto3-autoscaling (>=1.17.107)", "mypy-boto3-autoscaling-plans (>=1.17.107)", "mypy-boto3-backup (>=1.17.107)", "mypy-boto3-batch (>=1.17.107)", "mypy-boto3-braket (>=1.17.107)", "mypy-boto3-budgets (>=1.17.107)", "mypy-boto3-ce (>=1.17.107)", "mypy-boto3-chime (>=1.17.107)", "mypy-boto3-cloud9 (>=1.17.107)", "mypy-boto3-clouddirectory (>=1.17.107)", "mypy-boto3-cloudformation (>=1.17.107)", "mypy-boto3-cloudfront (>=1.17.107)", "mypy-boto3-cloudhsm (>=1.17.107)", "mypy-boto3-cloudhsmv2 (>=1.17.107)", "mypy-boto3-cloudsearch (>=1.17.107)", "mypy-boto3-cloudsearchdomain (>=1.17.107)", "mypy-boto3-cloudtrail (>=1.17.107)", "mypy-boto3-cloudwatch (>=1.17.107)", "mypy-boto3-codeartifact (>=1.17.107)", "mypy-boto3-codebuild (>=1.17.107)", "mypy-boto3-codecommit (>=1.17.107)", "mypy-boto3-codedeploy (>=1.17.107)", "mypy-boto3-codeguru-reviewer (>=1.17.107)", "mypy-boto3-codeguruprofiler (>=1.17.107)", "mypy-boto3-codepipeline (>=1.17.107)", "mypy-boto3-codestar (>=1.17.107)", "mypy-boto3-codestar-connections (>=1.17.107)", "mypy-boto3-codestar-notifications (>=1.17.107)", "mypy-boto3-cognito-identity (>=1.17.107)", "mypy-boto3-cognito-idp (>=1.17.107)", "mypy-boto3-cognito-sync (>=1.17.107)", "mypy-boto3-comprehend (>=1.17.107)", "mypy-boto3-comprehendmedical (>=1.17.107)", "mypy-boto3-compute-optimizer (>=1.17.107)", "mypy-boto3-config (>=1.17.107)", "mypy-boto3-connect (>=1.17.107)", "mypy-boto3-connect-contact-lens (>=1.17.107)", "mypy-boto3-connectparticipant (>=1.17.107)", "mypy-boto3-cur (>=1.17.107)", "mypy-boto3-customer-profiles (>=1.17.107)", "mypy-boto3-databrew (>=1.17.107)", "mypy-boto3-dataexchange (>=1.17.107)", "mypy-boto3-datapipeline (>=1.17.107)", "mypy-boto3-datasync (>=1.17.107)", "mypy-boto3-dax (>=1.17.107)", "mypy-boto3-detective (>=1.17.107)", "mypy-boto3-devicefarm (>=1.17.107)", "mypy-boto3-devops-guru (>=1.17.107)", "mypy-boto3-directconnect (>=1.17.107)", "mypy-boto3-discovery (>=1.17.107)", "mypy-boto3-dlm (>=1.17.107)", "mypy-boto3-dms (>=1.17.107)", "mypy-boto3-docdb (>=1.17.107)", "mypy-boto3-ds (>=1.17.107)", "mypy-boto3-dynamodb (>=1.17.107)", "mypy-boto3-dynamodbstreams (>=1.17.107)", "mypy-boto3-ebs (>=1.17.107)", "mypy-boto3-ec2 (>=1.17.107)", "mypy-boto3-ec2-instance-connect (>=1.17.107)", "mypy-boto3-ecr (>=1.17.107)", "mypy-boto3-ecr-public (>=1.17.107)", "mypy-boto3-ecs (>=1.17.107)", "mypy-boto3-efs (>=1.17.107)", "mypy-boto3-eks (>=1.17.107)", "mypy-boto3-elastic-inference (>=1.17.107)", "mypy-boto3-elasticache (>=1.17.107)", "mypy-boto3-elasticbeanstalk (>=1.17.107)", "mypy-boto3-elastictranscoder (>=1.17.107)", "mypy-boto3-elb (>=1.17.107)", "mypy-boto3-elbv2 (>=1.17.107)", "mypy-boto3-emr (>=1.17.107)", "mypy-boto3-emr-containers (>=1.17.107)", "mypy-boto3-es (>=1.17.107)", "mypy-boto3-events (>=1.17.107)", "mypy-boto3-finspace (>=1.17.107)", "mypy-boto3-finspace-data (>=1.17.107)", "mypy-boto3-firehose (>=1.17.107)", "mypy-boto3-fis (>=1.17.107)", "mypy-boto3-fms (>=1.17.107)", "mypy-boto3-forecast (>=1.17.107)", "mypy-boto3-forecastquery (>=1.17.107)", "mypy-boto3-frauddetector (>=1.17.107)", "mypy-boto3-fsx (>=1.17.107)", "mypy-boto3-gamelift (>=1.17.107)", "mypy-boto3-glacier (>=1.17.107)", "mypy-boto3-globalaccelerator (>=1.17.107)", "mypy-boto3-glue (>=1.17.107)", "mypy-boto3-greengrass (>=1.17.107)", "mypy-boto3-greengrassv2 (>=1.17.107)", "mypy-boto3-groundstation (>=1.17.107)", "mypy-boto3-guardduty (>=1.17.107)", "mypy-boto3-health (>=1.17.107)", "mypy-boto3-healthlake (>=1.17.107)", "mypy-boto3-honeycode (>=1.17.107)", "mypy-boto3-iam (>=1.17.107)", "mypy-boto3-identitystore (>=1.17.107)", "mypy-boto3-imagebuilder (>=1.17.107)", "mypy-boto3-importexport (>=1.17.107)", "mypy-boto3-inspector (>=1.17.107)", "mypy-boto3-iot (>=1.17.107)", "mypy-boto3-iot-data (>=1.17.107)", "mypy-boto3-iot-jobs-data (>=1.17.107)", "mypy-boto3-iot1click-devices (>=1.17.107)", "mypy-boto3-iot1click-projects (>=1.17.107)", "mypy-boto3-iotanalytics (>=1.17.107)", "mypy-boto3-iotdeviceadvisor (>=1.17.107)", "mypy-boto3-iotevents (>=1.17.107)", "mypy-boto3-iotevents-data (>=1.17.107)", "mypy-boto3-iotfleethub (>=1.17.107)", "mypy-boto3-iotsecuretunneling (>=1.17.107)", "mypy-boto3-iotsitewise (>=1.17.107)", "mypy-boto3-iotthingsgraph (>=1.17.107)", "mypy-boto3-iotwireless (>=1.17.107)", "mypy-boto3-ivs (>=1.17.107)", "mypy-boto3-kafka (>=1.17.107)", "mypy-boto3-kendra (>=1.17.107)", "mypy-boto3-kinesis (>=1.17.107)", "mypy-boto3-kinesis-video-archived-media (>=1.17.107)", "mypy-boto3-kinesis-video-media (>=1.17.107)", "mypy-boto3-kinesis-video-signaling (>=1.17.107)", "mypy-boto3-kinesisanalytics (>=1.17.107)", "mypy-boto3-kinesisanalyticsv2 (>=1.17.107)", "mypy-boto3-kinesisvideo (>=1.17.107)", "mypy-boto3-kms (>=1.17.107)", "mypy-boto3-lakeformation (>=1.17.107)", "mypy-boto3-lambda (>=1.17.107)", "mypy-boto3-lex-models (>=1.17.107)", "mypy-boto3-lex-runtime (>=1.17.107)", "mypy-boto3-lexv2-models (>=1.17.107)", "mypy-boto3-lexv2-runtime (>=1.17.107)", "mypy-boto3-license-manager (>=1.17.107)", "mypy-boto3-lightsail (>=1.17.107)", "mypy-boto3-location (>=1.17.107)", "mypy-boto3-logs (>=1.17.107)", "mypy-boto3-lookoutequipment (>=1.17.107)", "mypy-boto3-lookoutmetrics (>=1.17.107)", "mypy-boto3-lookoutvision (>=1.17.107)", "mypy-boto3-machinelearning (>=1.17.107)", "mypy-boto3-macie (>=1.17.107)", "mypy-boto3-macie2 (>=1.17.107)", "mypy-boto3-managedblockchain (>=1.17.107)", "mypy-boto3-marketplace-catalog (>=1.17.107)", "mypy-boto3-marketplace-entitlement (>=1.17.107)", "mypy-boto3-marketplacecommerceanalytics (>=1.17.107)", "mypy-boto3-mediaconnect (>=1.17.107)", "mypy-boto3-mediaconvert (>=1.17.107)", "mypy-boto3-medialive (>=1.17.107)", "mypy-boto3-mediapackage (>=1.17.107)", "mypy-boto3-mediapackage-vod (>=1.17.107)", "mypy-boto3-mediastore (>=1.17.107)", "mypy-boto3-mediastore-data (>=1.17.107)", "mypy-boto3-mediatailor (>=1.17.107)", "mypy-boto3-meteringmarketplace (>=1.17.107)", "mypy-boto3-mgh (>=1.17.107)", "mypy-boto3-mgn (>=1.17.107)", "mypy-boto3-migrationhub-config (>=1.17.107)", "mypy-boto3-mobile (>=1.17.107)", "mypy-boto3-mq (>=1.17.107)", "mypy-boto3-mturk (>=1.17.107)", "mypy-boto3-mwaa (>=1.17.107)", "mypy-boto3-neptune (>=1.17.107)", "mypy-boto3-network-firewall (>=1.17.107)", "mypy-boto3-networkmanager (>=1.17.107)", "mypy-boto3-nimble (>=1.17.107)", "mypy-boto3-opsworks (>=1.17.107)", "mypy-boto3-opsworkscm (>=1.17.107)", "mypy-boto3-organizations (>=1.17.107)", "mypy-boto3-outposts (>=1.17.107)", "mypy-boto3-personalize (>=1.17.107)", "mypy-boto3-personalize-events (>=1.17.107)", "mypy-boto3-personalize-runtime (>=1.17.107)", "mypy-boto3-pi (>=1.17.107)", "mypy-boto3-pinpoint (>=1.17.107)", "mypy-boto3-pinpoint-email (>=1.17.107)", "mypy-boto3-pinpoint-sms-voice (>=1.17.107)", "mypy-boto3-polly (>=1.17.107)", "mypy-boto3-pricing (>=1.17.107)", "mypy-boto3-proton (>=1.17.107)", "mypy-boto3-qldb (>=1.17.107)", "mypy-boto3-qldb-session (>=1.17.107)", "mypy-boto3-quicksight (>=1.17.107)", "mypy-boto3-ram (>=1.17.107)", "mypy-boto3-rds (>=1.17.107)", "mypy-boto3-rds-data (>=1.17.107)", "mypy-boto3-redshift (>=1.17.107)", "mypy-boto3-redshift-data (>=1.17.107)", "mypy-boto3-rekognition (>=1.17.107)", "mypy-boto3-resource-groups (>=1.17.107)", "mypy-boto3-resourcegroupstaggingapi (>=1.17.107)", "mypy-boto3-robomaker (>=1.17.107)", "mypy-boto3-route53 (>=1.17.107)", "mypy-boto3-route53domains (>=1.17.107)", "mypy-boto3-route53resolver (>=1.17.107)", "mypy-boto3-s3 (>=1.17.107)", "mypy-boto3-s3control (>=1.17.107)", "mypy-boto3-s3outposts (>=1.17.107)", "mypy-boto3-sagemaker (>=1.17.107)", "mypy-boto3-sagemaker-a2i-runtime (>=1.17.107)", "mypy-boto3-sagemaker-edge (>=1.17.107)", "mypy-boto3-sagemaker-featurestore-runtime (>=1.17.107)", "mypy-boto3-sagemaker-runtime (>=1.17.107)", "mypy-boto3-savingsplans (>=1.17.107)", "mypy-boto3-schemas (>=1.17.107)", "mypy-boto3-sdb (>=1.17.107)", "mypy-boto3-secretsmanager (>=1.17.107)", "mypy-boto3-securityhub (>=1.17.107)", "mypy-boto3-serverlessrepo (>=1.17.107)", "mypy-boto3-service-quotas (>=1.17.107)", "mypy-boto3-servicecatalog (>=1.17.107)", "mypy-boto3-servicecatalog-appregistry (>=1.17.107)", "mypy-boto3-servicediscovery (>=1.17.107)", "mypy-boto3-ses (>=1.17.107)", "mypy-boto3-sesv2 (>=1.17.107)", "mypy-boto3-shield (>=1.17.107)", "mypy-boto3-signer (>=1.17.107)", "mypy-boto3-sms (>=1.17.107)", "mypy-boto3-sms-voice (>=1.17.107)", "mypy-boto3-snowball (>=1.17.107)", "mypy-boto3-sns (>=1.17.107)", "mypy-boto3-sqs (>=1.17.107)", "mypy-boto3-ssm (>=1.17.107)", "mypy-boto3-ssm-contacts (>=1.17.107)", "mypy-boto3-ssm-incidents (>=1.17.107)", "mypy-boto3-sso (>=1.17.107)", "mypy-boto3-sso-admin (>=1.17.107)", "mypy-boto3-sso-oidc (>=1.17.107)", "mypy-boto3-stepfunctions (>=1.17.107)", "mypy-boto3-storagegateway (>=1.17.107)", "mypy-boto3-sts (>=1.17.107)", "mypy-boto3-support (>=1.17.107)", "mypy-boto3-swf (>=1.17.107)", "mypy-boto3-synthetics (>=1.17.107)", "mypy-boto3-textract (>=1.17.107)", "mypy-boto3-timestream-query (>=1.17.107)", "mypy-boto3-timestream-write (>=1.17.107)", "mypy-boto3-transcribe (>=1.17.107)", "mypy-boto3-transfer (>=1.17.107)", "mypy-boto3-translate (>=1.17.107)", "mypy-boto3-waf (>=1.17.107)", "mypy-boto3-waf-regional (>=1.17.107)", "mypy-boto3-wafv2 (>=1.17.107)", "mypy-boto3-wellarchitected (>=1.17.107)", "mypy-boto3-workdocs (>=1.17.107)", "mypy-boto3-worklink (>=1.17.107)", "mypy-boto3-workmail (>=1.17.107)", "mypy-boto3-workmailmessageflow (>=1.17.107)", "mypy-boto3-workspaces (>=1.17.107)", "mypy-boto3-xray (>=1.17.107)"]
amp = ["mypy-boto3-amp (>=1.17.107)"]
amplify = ["mypy-boto3-amplify (>=1.17.107)"]
amplifybackend = ["mypy-boto3-amplifybackend (>=1.17.107)"]
apigateway = ["mypy-boto3-apigateway (>=1.17.107)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (>=1.17.107)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (>=1.17.107)"]
appconfig = ["mypy-boto3-appconfig (>=1.17.107)"]
appflow = ["mypy-boto3-appflow (>=1.17.107)"]
appintegrations = ["mypy-boto3-appintegrations (>=1.17.107)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (>=1.17.107)"]
application-insights = ["mypy-boto3-application-insights (>=1.17.107)"]
applicationcostprofiler = ["mypy-boto3-applicationcostprofiler (>=1.17.107)"]
appmesh = ["mypy-boto3-appmesh (>=1.17.107)"]
apprunner = ["mypy-boto3-apprunner (>=1.17.107)"]
appstream = ["mypy-boto3-appstream (>=1.17.107)"]
appsync = ["mypy-boto3-appsync (>=1.17.107)"]
athena = ["mypy-boto3-athena (>=1.17.107)"]
auditmanager = ["mypy-boto3-auditmanager (>=1.17.107)"]
autoscaling = ["mypy-boto3-autoscaling (>=1.17.107)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (>=1.17.107)"]
backup = ["mypy-boto3-backup (>=1.17.107)"]
batch = ["mypy-boto3-batch (>=1.17.107)"]
braket = ["mypy-boto3-braket (>=1.17.107)"]
budgets = ["mypy-boto3-budgets (>=1.17.107)"]
ce = ["mypy-boto3-ce (>=1.17.107)"]
chime = ["mypy-boto3-chime (>=1.17.107)"]
cloud9 = ["mypy-boto3-cloud9 (>=1.17.107)"]
clouddirectory = ["mypy-boto3-clouddirectory (>=1.17.107)"]
cloudformation = ["mypy-boto3-cloudformation (>=1.17.107)"]
cloudfront = ["mypy-boto3-cloudfront (>=1.17.107)"]
cloudhsm = ["mypy-boto3-cloudhsm (>=1.17.107)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (>=1.17.107)"]
cloudsearch = ["mypy-boto3-cloudsearch (>=1.17.107)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (>=1.17.107)"]
cloudtrail = ["mypy-boto3-cloudtrail (>=1.17.107)"]
cloudwatch = ["mypy-boto3-cloudwatch (>=1.17.107)"]
codeartifact = ["mypy-boto3-codeartifact (>=1.17.107)"]
codebuild = ["mypy-boto3-codebuild (>=1.17.107)"]
codecommit = ["mypy-boto3-codecommit (>=1.17.107)"]
codedeploy = ["mypy-boto3-codedeploy (>=1.17.107)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (>=1.17.107)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (>=1.17.107)"]
codepipeline = ["mypy-boto3-codepipeline (>=1.17.107)"]
codestar = ["mypy-boto3-codestar (>=1.17.107)"]
codestar-connections = ["mypy-boto3-codestar-connections (>=1.17.107)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (>=1.17.107)"]
cognito-identity = ["mypy-boto3-cognito-identity (>=1.17.107)"]
cognito-idp = ["mypy-boto3-cognito-idp (>=1.17.107)"]
cognito-sync = ["mypy-boto3-cognito-sync (>=1.17.107)"]
comprehend = ["mypy-boto3-comprehend (>=1.17.107)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (>=1.17.107)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (>=1.17.107)"]
config = ["mypy-boto3-config (>=1.17.107)"]
connect = ["mypy-boto3-connect (>=1.17.107)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (>=1.17.107)"]
connectparticipant = ["mypy-boto3-connectparticipant (>=1.17.107)"]
cur = ["mypy-boto3-cur (>=1.17.107)"]
customer-profiles = ["mypy-boto3-customer-profiles (>=1.17.107)"]
databrew = ["mypy-boto3-databrew (>=1.17.107)"]
dataexchange = ["mypy-boto3-dataexchange (>=1.17.107)"]
datapipeline = ["mypy-boto3-datapipeline (>=1.17.107)"]
datasync = ["mypy-boto3-datasync (>=1.17.107)"]
dax = ["mypy-boto3-dax (>=1.17.107)"]
detective = ["mypy-boto3-detective (>=1.17.107)"]
devicefarm = ["mypy-boto3-devicefarm (>=1.17.107)"]
devops-guru = ["mypy-boto3-devops-guru (>=1.17.107)"]
directconnect = ["mypy-boto3-directconnect (>=1.17.107)"]
discovery = ["mypy-boto3-discovery (>=1.17.107)"]
dlm = ["mypy-boto3-dlm (>=1.17.107)"]
dms = ["mypy-boto3-dms (>=1.17.107)"]
docdb = ["mypy-boto3-docdb (>=1.17.107)"]
ds = ["mypy-boto3-ds (>=1.17.107)"]
dynamodb = ["mypy-boto3-dynamodb (>=1.17.107)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (>=1.17.107)"]
ebs = ["mypy-boto3-ebs (>=1.17.107)"]
ec2 = ["mypy-boto3-ec2 (>=1.17.107)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (>=1.17.107)"]
ecr = ["mypy-boto3-ecr (>=1.17.107)"]
ecr-public = ["mypy-boto3-ecr-public (>=1.17.107)"]
ecs = ["mypy-boto3-ecs (>=1.17.107)"]
efs = ["mypy-boto3-efs (>=1.17.107)"]
eks = ["mypy-boto3-eks (>=1.17.107)"]
elastic-inference = ["mypy-boto3-elastic-inference (>=1.17.107)"]
elasticache = ["mypy-boto3-elasticache (>=1.17.107)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (>=1.17.107)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (>=1.17.107)"]
elb = ["mypy-boto3-elb (>=1.17.107)"]
elbv2 = ["mypy-boto3-elbv2 (>=1.17.107)"]
emr = ["mypy-boto3-emr (>=1.17.107)"]
emr-containers = ["mypy-boto3-emr-containers (>=1.17.107)"]
es = ["mypy-boto3-es (>=1.17.107)"]
essential = ["mypy-boto3-cloudformation (>=1.17.107)", "mypy-boto3-dynamodb (>=1.17.107)", "mypy-boto3-ec2 (>=1.17.107)", "mypy-boto3-lambda (>=1.17.107)", "mypy-boto3-rds (>=1.17.107)", "mypy-boto3-s3 (>=1.17.107)", "mypy-boto3-sqs (>=1.17.107)"]
events = ["mypy-boto3-events (>=1.17.107)"]
finspace = ["mypy-boto3-finspace (>=1.17.107)"]
finspace-data = ["mypy-boto3-finspace-data (>=1.17.107)"]
firehose = ["mypy-boto3-firehose (>=1.17.107)"]
fis = ["mypy-boto3-fis (>=1.17.107)"]
fms = ["mypy-boto3-fms (>=1.17.107)"]
forecast = ["mypy-boto3-forecast (>=1.17.107)"]
forecastquery = ["mypy-boto3-forecastquery (>=1.17.107)"]
frauddetector = ["mypy-boto3-frauddetector (>=1.17.107)"]
fsx = ["mypy-boto3-fsx (>=1.17.107)"]
gamelift = ["mypy-boto3-gamelift (>=1.17.107)"]
glacier = ["mypy-boto3-glacier (>=1.17.107)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (>=1.17.107)"]
glue = ["mypy-boto3-glue (>=1.17.107)"]
greengrass = ["mypy-boto3-greengrass (>=1.17.107)"]
greengrassv2 = ["mypy-boto3-greengrassv2 (>=1.17.107)"]
groundstation = ["mypy-boto3-groundstation (>=1.17.107)"]
guardduty = ["mypy-boto3-guardduty (>=1.17.107)"]
health = ["mypy-boto3-health (>=1.17.107)"]
healthlake = ["mypy-boto3-healthlake (>=1.17.107)"]
honeycode = ["mypy-boto3-honeycode (>=1.17.107)"]
iam = ["mypy-boto3-iam (>=1.17.107)"]
identitystore = ["mypy-boto3-identitystore (>=1.17.107)"]
imagebuilder = ["mypy-boto3-imagebuilder (>=1.17.107)"]
importexport = ["mypy-boto3-importexport (>=1.17.107)"]
inspector = ["mypy-boto3-inspector (>=1.17.107)"]
iot = ["mypy-boto3-iot (>=1.17.107)"]
iot-data = ["mypy-boto3-iot-data (>=1.17.107)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (>=1.17.107)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (>=1.17.107)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (>=1.17.107)"]
iotanalytics = ["mypy-boto3-iotanalytics (>=1.17.107)"]
iotdeviceadvisor = ["mypy-boto3-iotdeviceadvisor (>=1.17.107)"]
iotevents = ["mypy-boto3-iotevents (>=1.17.107)"]
iotevents-data = ["mypy-boto3-iotevents-data (>=1.17.107)"]
iotfleethub = ["mypy-boto3-iotfleethub (>=1.17.107)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (>=1.17.107)"]
iotsitewise = ["mypy-boto3-iotsitewise (>=1.17.107)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (>=1.17.107)"]
iotwireless = ["mypy-boto3-iotwireless (>=1.17.107)"]
ivs = ["mypy-boto3-ivs (>=1.17.107)"]
kafka = ["mypy-boto3-kafka (>=1.17.107)"]
kendra = ["mypy-boto3-kendra (>=1.17.107)"]
kinesis = ["mypy-boto3-kinesis (>=1.17.107)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (>=1.17.107)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (>=1.17.107)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (>=1.17.107)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (>=1.17.107)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (>=1.17.107)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (>=1.17.107)"]
kms = ["mypy-boto3-kms (>=1.17.107)"]
lakeformation = ["mypy-boto3-lakeformation (>=1.17.107)"]
lambda = ["mypy-boto3-lambda (>=1.17.107)"]
lex-models = ["mypy-boto3-lex-models (>=1.17.107)"]
lex-runtime = ["mypy-boto3-lex-runtime (>=1.17.107)"]
lexv2-models = ["mypy-boto3-lexv2-models (>=1.17.107)"]
lexv2-runtime = ["mypy-boto3-lexv2-runtime (>=1.17.107)"]
license-manager = ["mypy-boto3-license-manager (>=1.17.107)"]
lightsail = ["mypy-boto3-lightsail (>=1.17.107)"]
location = ["mypy-boto3-location (>=1.17.107)"]
logs = ["mypy-boto3-logs (>=1.17.107)"]
lookoutequipment = ["mypy-boto3-lookoutequipment (>=1.17.107)"]
lookoutmetrics = ["mypy-boto3-lookoutmetrics (>=1.17.107)"]
lookoutvision = ["mypy-boto3-lookoutvision (>=1.17.107)"]
machinelearning = ["mypy-boto3-machinelearning (>=1.17.107)"]
macie = ["mypy-boto3-macie (>=1.17.107)"]
macie2 = ["mypy-boto3-macie2 (>=1.17.107)"]
managedblockchain = ["mypy-boto3-managedblockchain (>=1.17.107)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (>=1.17.107)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (>=1.17.107)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (>=1.17.107)"]
mediaconnect = ["mypy-boto3-mediaconnect (>=1.17.107)"]
mediaconvert = ["mypy-boto3-mediaconvert (>=1.17.107)"]
medialive = ["mypy-boto3-medialive (>=1.17.107)"]
mediapackage = ["mypy-boto3-mediapackage (>=1.17.107)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (>=1.17.107)"]
mediastore = ["mypy-boto3-mediastore (>=1.17.107)"]
mediastore-data = ["mypy-boto3-mediastore-data (>=1.17.107)"]
mediatailor = ["mypy-boto3-mediatailor (>=1.17.107)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (>=1.17.107)"]
mgh = ["mypy-boto3-mgh (>=1.17.107)"]
mgn = ["mypy-boto3-mgn (>=1.17.107)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (>=1.17.107)"]
mobile = ["mypy-boto3-mobile (>=1.17.107)"]
mq = ["mypy-boto3-mq (>=1.17.107)"]
mturk = ["mypy-boto3-mturk (>=1.17.107)"]
mwaa = ["mypy-boto3-mwaa (>=1.17.107)"]
neptune = ["mypy-boto3-neptune (>=1.17.107)"]
network-firewall = ["mypy-boto3-network-firewall (>=1.17.107)"]
networkmanager = ["mypy-boto3-networkmanager (>=1.17.107)"]
nimble = ["mypy-boto3-nimble (>=1.17.107)"]
opsworks = ["mypy-boto3-opsworks (>=1.17.107)"]
opsworkscm = ["mypy-boto3-opsworkscm (>=1.17.107)"]
organizations = ["mypy-boto3-organizations (>=1.17.107)"]
outposts = ["mypy-boto3-outposts (>=1.17.107)"]
personalize = ["mypy-boto3-personalize (>=1.17.107)"]
personalize-events = ["mypy-boto3-personalize-events (>=1.17.107)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (>=1.17.107)"]
pi = ["mypy-boto3-pi (>=1.17.107)"]
pinpoint = ["mypy-boto3-pinpoint (>=1.17.107)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (>=1.17.107)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (>=1.17.107)"]
polly = ["mypy-boto3-polly (>=1.17.107)"]
pricing = ["mypy-boto3-pricing (>=1.17.107)"]
proton = ["mypy-boto3-proton (>=1.17.107)"]
qldb = ["mypy-boto3-qldb (>=1.17.107)"]
qldb-session = ["mypy-boto3-qldb-session (>=1.17.107)"]
quicksight = ["mypy-boto3-quicksight (>=1.17.107)"]
ram = ["mypy-boto3-ram (>=1.17.107)"]
rds = ["mypy-boto3-rds (>=1.17.107)"]
rds-data = ["mypy-boto3-rds-data (>=1.17.107)"]
redshift = ["mypy-boto3-redshift (>=1.17.107)"]
redshift-data = ["mypy-boto3-redshift-data (>=1.17.107)"]
rekognition = ["mypy-boto3-rekognition (>=1.17.107)"]
resource-groups = ["mypy-boto3-resource-groups (>=1.17.107)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (>=1.17.107)"]
robomaker = ["mypy-boto3-robomaker (>=1.17.107)"]
route53 = ["mypy-boto3-route53 (>=1.17.107)"]
route53domains = ["mypy-boto3-route53domains (>=1.17.107)"]
route53resolver = ["mypy-boto3-route53resolver (>=1.17.107)"]
s3 = ["mypy-boto3-s3 (>=1.17.107)"]
s3control = ["mypy-boto3-s3control (>=1.17.107)"]
s3outposts = ["mypy-boto3-s3outposts (>=1.17.107)"]
sagemaker = ["mypy-boto3-sagemaker (>=1.17.107)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (>=1.17.107)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (>=1.17.107)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (>=1.17.107)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (>=1.17.107)"]
savingsplans = ["mypy-boto3-savingsplans (>=1.17.107)"]
schemas = ["mypy-boto3-schemas (>=1.17.107)"]
sdb = ["mypy-boto3-sdb (>=1.17.107)"]
secretsmanager = ["mypy-boto3-secretsmanager (>=1.17.107)"]
securityhub = ["mypy-boto3-securityhub (>=1.17.107)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (>=1.17.107)"]
service-quotas = ["mypy-boto3-service-quotas (>=1.17.107)"]
servicecatalog = ["mypy-boto3-servicecatalog (>=1.17.107)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (>=1.17.107)"]
servicediscovery = ["mypy-boto3-servicediscovery (>=1.17.107)"]
ses = ["mypy-boto3-ses (>=1.17.107)"]
sesv2 = ["mypy-boto3-sesv2 (>=1.17.107)"]
shield = ["mypy-boto3-shield (>=1.17.107)"]
signer = ["mypy-boto3-signer (>=1.17.107)"]
sms = ["mypy-boto3-sms (>=1.17.107)"]
sms-voice = ["mypy-boto3-sms-voice (>=1.17.107)"]
snowball = ["mypy-boto3-snowball (>=1.17.107)"]
sns = ["mypy-boto3-sns (>=1.17.107)"]
sqs = ["mypy-boto3-sqs (>=1.17.107)"]
ssm = ["mypy-boto3-ssm (>=1.17.107)"]
ssm-contacts = ["mypy-boto3-ssm-contacts (>=1.17.107)"]
ssm-incidents = ["mypy-boto3-ssm-incidents (>=1.17.107)"]
sso = ["mypy-boto3-sso (>=1.17.107)"]
sso-admin = ["mypy-boto3-sso-admin (>=1.17.107)"]
sso-oidc = ["mypy-boto3-sso-oidc (>=1.17.107)"]
stepfunctions = ["mypy-boto3-stepfunctions (>=1.17.107)"]
storagegateway = ["mypy-boto3-storagegateway (>=1.17.107)"]
sts = ["mypy-boto3-sts (>=1.17.107)"]
support = ["mypy-boto3-support (>=1.17.107)"]
swf = ["mypy-boto3-swf (>=1.17.107)"]
synthetics = ["mypy-boto3-synthetics (>=1.17.107)"]
textract = ["mypy-boto3-textract (>=1.17.107)"]
timestream-query = ["mypy-boto3-timestream-query (>=1.17.107)"]
timestream-write = ["mypy-boto3-timestream-write (>=1.17.107)"]
transcribe = ["mypy-boto3-transcribe (>=1.17.107)"]
transfer = ["mypy-boto3-transfer (>=1.17.107)"]
translate = ["mypy-boto3-translate (>=1.17.107)"]
waf = ["mypy-boto3-waf (>=1.17.107)"]
waf-regional = ["mypy-boto3-waf-regional (>=1.17.107)"]
wafv2 = ["mypy-boto3-wafv2 (>=1.17.107)"]
wellarchitected = ["mypy-boto3-wellarchitected (>=1.17.107)"]
workdocs = ["mypy-boto3-workdocs (>=1.17.107)"]
worklink = ["mypy-boto3-worklink (>=1.17.107)"]
workmail = ["mypy-boto3-workmail (>=1.17.107)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (>=1.17.107)"]
workspaces = ["mypy-boto3-workspaces (>=1.17.107)"]
xray = ["mypy-boto3-xray (>=1.17.107)"]

[[package]]
name = "botocore"
version = "1.20.112"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
jmespath = ">=0.7.1,<1.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.11.24)"]

[[package]]
name = "botocore-stubs"
version = "1.31.82"
description = "Type annotations and code completion for botocore"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
types-awscrt = "*"
typing-extensions = {version = ">=4.1.0", markers = "python_version < \"3.9\""}

[package.extras]
botocore = ["botocore (==1.31.76)"]

[[package]]
name = "celery"
version = "5.2.2"
description = "Distributed Task Queue."
category = "main"
optional = false
python-versions = ">=3.7,"

[package.dependencies]
billiard = ">=3.6.4.0,<4.0"
click = ">=8.0,<9.0"
click-didyoumean = ">=0.0.3"
click-plugins = ">=1.1.1"
click-repl = ">=0.2.0"
kombu = ">=5.2.2,<6.0"
pytz = ">0.dev.0"
vine = ">=5.0.0,<6.0"

[package.extras]
arangodb = ["pyArango (>=1.3.2)"]
auth = ["cryptography"]
azureblockblob = ["azure-storage-blob (==12.9.0)"]
brotli = ["brotli (>=1.0.0)", "brotlipy (>=0.7.0)"]
cassandra = ["cassandra-driver (<3.21.0)"]
consul = ["python-consul2"]
cosmosdbsql = ["pydocumentdb (==2.3.2)"]
couchbase = ["couchbase (>=3.0.0)"]
couchdb = ["pycouchdb"]
django = ["Django (>=1.11)"]
dynamodb = ["boto3 (>=1.9.178)"]
elasticsearch = ["elasticsearch"]
eventlet = ["eventlet (>=0.32.0)"]
gevent = ["gevent (>=1.5.0)"]
librabbitmq = ["librabbitmq (>=1.5.0)"]
memcache = ["pylibmc"]
mongodb = ["pymongo[srv] (>=3.3.0,<3.12.1)"]
msgpack = ["msgpack"]
pymemcache = ["python-memcached"]
pyro = ["pyro4"]
pytest = ["pytest-celery"]
redis = ["redis (>=3.4.1,<4.0.0)"]
s3 = ["boto3 (>=1.9.125)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
solar = ["ephem"]
sqlalchemy = ["sqlalchemy"]
sqs = ["kombu"]
tblib = ["tblib (>=1.3.0)", "tblib (>=1.5.0)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=1.3.1)"]
zstd = ["zstandard"]

[[package]]
name = "certifi"
version = "2023.7.22"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.16.0"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "3.3.2"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "click-didyoumean"
version = "0.3.0"
description = "Enables git-like *did-you-mean* feature in click"
category = "main"
optional = false
python-versions = ">=3.6.2,<4.0.0"

[package.dependencies]
click = ">=7"

[[package]]
name = "click-plugins"
version = "1.1.1"
description = "An extension module for click to enable registering CLI commands via setuptools entry-points."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
click = ">=4.0"

[package.extras]
dev = ["pytest (>=3.6)", "pytest-cov", "wheel", "coveralls"]

[[package]]
name = "click-repl"
version = "0.3.0"
description = "REPL plugin for Click"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
click = ">=7.0"
prompt-toolkit = ">=3.0.36"

[package.extras]
testing = ["pytest-cov (>=4.0.0)", "pytest (>=7.2.1)", "tox (>=4.4.3)"]

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "coverage"
version = "7.3.2"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
toml = ["tomli"]

[[package]]
name = "cryptography"
version = "41.0.5"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=5.3.0)", "sphinx-rtd-theme (>=1.1.1)"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
nox = ["nox"]
pep8test = ["black", "ruff", "mypy", "check-sdist"]
sdist = ["build"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-xdist", "pretend"]
test-randomorder = ["pytest-randomly"]

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "deprecated"
version = "1.2.14"
description = "Python @deprecated decorator to deprecate old python classes, functions or methods."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
wrapt = ">=1.10,<2"

[package.extras]
dev = ["tox", "pytest", "pytest-cov", "bump2version (<1)", "sphinx (<2)"]

[[package]]
name = "dill"
version = "0.3.7"
description = "serialize all of Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "dj-database-url"
version = "0.5.0"
description = "Use Database URLs in your Django Application."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "django"
version = "3.2.20"
description = "A high-level Python Web framework that encourages rapid development and clean, pragmatic design."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
asgiref = ">=3.3.2,<4"
pytz = "*"
sqlparse = ">=0.2.2"

[package.extras]
argon2 = ["argon2-cffi (>=19.1.0)"]
bcrypt = ["bcrypt"]

[[package]]
name = "django-audit-log-middleware"
version = "0.0.4"
description = "Simple audit logging for Django requests"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
django = ">=2.2.0"
django-ipware = ">=3.0.2,<3.1.0"

[[package]]
name = "django-celery-beat"
version = "2.2.1"
description = "Database-backed Periodic Tasks."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
celery = ">=5.0,<6.0"
Django = ">=2.2,<4.0"
django-timezone-field = ">=4.1.0,<5.0"
python-crontab = ">=2.3.4"

[[package]]
name = "django-environ"
version = "0.4.5"
description = "Django-environ allows you to utilize 12factor inspired environment variables to configure your Django application."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "django-extensions"
version = "3.0.9"
description = "Extensions for Django"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "django-filter"
version = "2.4.0"
description = "Django-filter is a reusable Django application for allowing users to filter querysets dynamically."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
Django = ">=2.2"

[[package]]
name = "django-hashid-field"
version = "3.3.7"
description = "A Hashids obfuscated Django Model Field"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Django = ">=1.11"
hashids = ">=1.2.0"

[[package]]
name = "django-ipware"
version = "3.0.7"
description = "A Django application to retrieve user's IP address"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "django-log-formatter-ecs"
version = "0.0.5"
description = "ECS log formatter for Django"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
django-ipware = ">=3.0,<4.0"
kubi-ecs-logger = ">=0.1.0,<0.2.0"

[[package]]
name = "django-model-utils"
version = "4.0.0"
description = "Django model mixins and utilities"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Django = ">=2.0.1"

[[package]]
name = "django-oauth-toolkit"
version = "2.1.0"
description = "OAuth2 Provider for Django"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
django = ">=2.2,<=4.1"
jwcrypto = ">=0.8.0"
oauthlib = ">=3.1.0"
requests = ">=2.13.0"

[[package]]
name = "django-ordered-model"
version = "3.4.1"
description = "Allows Django models to be ordered and provides a simple admin interface for reordering them."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "django-pglocks"
version = "1.0.4"
description = "django_pglocks provides useful context managers for advisory locks for PostgreSQL."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.0.0"

[[package]]
name = "django-redis"
version = "4.12.1"
description = "Full featured redis cache backend for Django."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
Django = ">=2.2"
redis = ">=3.0.0"

[[package]]
name = "django-simple-history"
version = "2.11.0"
description = "Store model history and view/revert changes from admin site."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
six = "*"

[[package]]
name = "django-staff-sso-client"
version = "3.1.0"
description = "Reusable Django app to facilitate gov.uk Staff Single Sign On"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Django = ">=2.2,<4"
requests-oauthlib = "*"

[package.extras]
test = ["pytest (==5.3.5)", "pytest-cov", "pytest-sugar", "flake8 (==3.0.4)", "requests-mock", "codecov", "twine", "wheel", "setuptools", "pytest-django", "raven"]

[[package]]
name = "django-timezone-field"
version = "4.2.3"
description = "A Django app providing database and form fields for pytz timezone objects."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
django = ">=2.2"
pytz = "*"

[package.extras]
rest_framework = ["djangorestframework (>=3.0.0)"]

[[package]]
name = "djangorestframework"
version = "3.12.1"
description = "Web APIs for Django, made easy."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
django = ">=2.2"

[[package]]
name = "docopt"
version = "0.6.2"
description = "Pythonic argument parser, that will make you smile"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "elastic-apm"
version = "6.3.3"
description = "The official Python module for Elastic APM"
category = "main"
optional = false
python-versions = "<4,>=3.6"

[package.dependencies]
certifi = "*"
urllib3 = "*"

[package.extras]
aiohttp = ["aiohttp"]
flask = ["blinker"]
opentracing = ["opentracing (>=2.0.0)"]
starlette = ["starlette"]
tornado = ["tornado"]

[[package]]
name = "exceptiongroup"
version = "1.1.3"
description = "Backport of PEP 654 (exception groups)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "execnet"
version = "2.0.2"
description = "execnet: rapid multi-Python deployment"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
testing = ["hatch", "pre-commit", "pytest", "tox"]

[[package]]
name = "executing"
version = "2.0.1"
description = "Get the currently executing AST node of a frame, and other information"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
tests = ["asttokens (>=2.1.0)", "ipython", "pytest", "coverage", "coverage-enable-subprocess", "littleutils", "rich"]

[[package]]
name = "factory-boy"
version = "3.0.1"
description = "A versatile test fixtures replacement based on thoughtbot's factory_bot for Ruby."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
Faker = ">=0.7.0"

[package.extras]
dev = ["coverage", "django", "flake8", "isort", "pillow", "sqlalchemy", "mongoengine", "wheel (>=0.32.0)", "tox", "zest.releaser"]
doc = ["sphinx", "sphinx-rtd-theme"]

[[package]]
name = "faker"
version = "19.3.1"
description = "Faker is a Python package that generates fake data for you."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
python-dateutil = ">=2.4"
typing-extensions = {version = ">=3.10.0.1", markers = "python_version <= \"3.8\""}

[[package]]
name = "flake8"
version = "3.8.4"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.6.0a1,<2.7.0"
pyflakes = ">=2.2.0,<2.3.0"

[[package]]
name = "freezegun"
version = "1.2.2"
description = "Let your Python tests travel through time"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
python-dateutil = ">=2.7"

[[package]]
name = "gevent"
version = "23.9.1"
description = "Coroutine-based network library"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
cffi = {version = ">=1.12.2", markers = "platform_python_implementation == \"CPython\" and sys_platform == \"win32\""}
greenlet = [
    {version = ">=2.0.0", markers = "platform_python_implementation == \"CPython\" and python_version < \"3.11\""},
    {version = ">=3.0rc3", markers = "platform_python_implementation == \"CPython\" and python_version >= \"3.11\""},
]
"zope.event" = "*"
"zope.interface" = "*"

[package.extras]
dnspython = ["dnspython (>=1.16.0,<2.0)", "idna"]
monitor = ["psutil (>=5.7.0)"]
recommended = ["cffi (>=1.12.2)", "dnspython (>=1.16.0,<2.0)", "idna", "psutil (>=5.7.0)"]
docs = ["sphinx", "furo", "repoze.sphinx.autointerface", "sphinxcontrib-programoutput", "zope.schema"]
test = ["cffi (>=1.12.2)", "dnspython (>=1.16.0,<2.0)", "idna", "psutil (>=5.7.0)", "requests", "coverage (>=5.0)", "objgraph", "setuptools"]

[[package]]
name = "greenlet"
version = "3.0.1"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx"]
test = ["objgraph", "psutil"]

[[package]]
name = "gunicorn"
version = "20.0.4"
description = "WSGI HTTP Server for UNIX"
category = "main"
optional = false
python-versions = ">=3.4"

[package.extras]
eventlet = ["eventlet (>=0.9.7)"]
gevent = ["gevent (>=0.13)"]
setproctitle = ["setproctitle"]
tornado = ["tornado (>=0.2)"]

[[package]]
name = "hashids"
version = "1.3.1"
description = "Implements the hashids algorithm in python. For more information, visit http://hashids.org/"
category = "main"
optional = false
python-versions = ">=2.7"

[package.extras]
test = ["pytest (>=2.1.0)"]

[[package]]
name = "hawkrest"
version = "1.0.1"
description = "Hawk HTTP Authorization for Django Rest Framework"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
djangorestframework = "*"
mohawk = ">=0.3.4"

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "4.13.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "iniconfig"
version = "2.0.0"
description = "brain-dead simple config-ini parsing"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "ipdb"
version = "0.13.13"
description = "IPython-enabled pdb"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
decorator = {version = "*", markers = "python_version > \"3.6\" and python_version < \"3.11\" or python_version >= \"3.11\""}
ipython = {version = ">=7.31.1", markers = "python_version > \"3.6\" and python_version < \"3.11\" or python_version >= \"3.11\""}
tomli = {version = "*", markers = "python_version > \"3.6\" and python_version < \"3.11\""}

[[package]]
name = "ipython"
version = "8.10.0"
description = "IPython: Productive Interactive Computing"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "sys_platform == \"darwin\""}
backcall = "*"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\""}
pickleshare = "*"
prompt-toolkit = ">=3.0.30,<3.1.0"
pygments = ">=2.4.0"
stack-data = "*"
traitlets = ">=5"

[package.extras]
all = ["black", "ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest (<7)", "typing-extensions", "pytest (<7.1)", "pytest-asyncio", "testpath", "nbconvert", "nbformat", "ipywidgets", "notebook", "ipyparallel", "qtconsole", "curio", "matplotlib (!=3.2.0)", "numpy (>=1.21)", "pandas", "trio"]
black = ["black"]
doc = ["ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest (<7)", "typing-extensions", "pytest (<7.1)", "pytest-asyncio", "testpath"]
kernel = ["ipykernel"]
nbconvert = ["nbconvert"]
nbformat = ["nbformat"]
notebook = ["ipywidgets", "notebook"]
parallel = ["ipyparallel"]
qtconsole = ["qtconsole"]
test = ["pytest (<7.1)", "pytest-asyncio", "testpath"]
test_extra = ["pytest (<7.1)", "pytest-asyncio", "testpath", "curio", "matplotlib (!=3.2.0)", "nbformat", "numpy (>=1.21)", "pandas", "trio"]

[[package]]
name = "isort"
version = "5.12.0"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.8.0"

[package.extras]
colors = ["colorama (>=0.4.3)"]
requirements-deprecated-finder = ["pip-api", "pipreqs"]
pipfile-deprecated-finder = ["pip-shims (>=0.5.2)", "pipreqs", "requirementslib"]
plugins = ["setuptools"]

[[package]]
name = "jedi"
version = "0.19.1"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.3,<0.9.0"

[package.extras]
docs = ["Jinja2 (==2.11.3)", "MarkupSafe (==1.1.1)", "Pygments (==2.8.1)", "alabaster (==0.7.12)", "babel (==2.9.1)", "chardet (==4.0.0)", "commonmark (==0.8.1)", "docutils (==0.17.1)", "future (==0.18.2)", "idna (==2.10)", "imagesize (==1.2.0)", "mock (==1.0.1)", "packaging (==20.9)", "pyparsing (==2.4.7)", "pytz (==2021.1)", "readthedocs-sphinx-ext (==2.1.4)", "recommonmark (==0.5.0)", "requests (==2.25.1)", "six (==1.15.0)", "snowballstemmer (==2.1.0)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==1.8.5)", "sphinxcontrib-serializinghtml (==1.1.4)", "sphinxcontrib-websupport (==1.2.4)", "urllib3 (==1.26.4)"]
qa = ["flake8 (==5.0.4)", "mypy (==0.971)", "types-setuptools (==67.2.0.1)"]
testing = ["django", "attrs", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "0.10.0"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "jsondiff"
version = "1.1.2"
description = "Diff JSON and JSON-like structures in Python"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "jwcrypto"
version = "1.5.0"
description = "Implementation of JOSE Web standards"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
cryptography = ">=3.4"
deprecated = "*"

[[package]]
name = "kombu"
version = "5.3.3"
description = "Messaging library for Python."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
amqp = ">=5.1.1,<6.0.0"
"backports.zoneinfo" = {version = ">=0.2.1", extras = ["tzdata"], markers = "python_version < \"3.9\""}
typing-extensions = {version = "*", markers = "python_version < \"3.10\""}
vine = "*"

[package.extras]
azureservicebus = ["azure-servicebus (>=7.10.0)"]
azurestoragequeues = ["azure-identity (>=1.12.0)", "azure-storage-queue (>=12.6.0)"]
confluentkafka = ["confluent-kafka (>=2.2.0)"]
consul = ["python-consul2"]
librabbitmq = ["librabbitmq (>=2.0.0)"]
mongodb = ["pymongo (>=4.1.1)"]
msgpack = ["msgpack"]
pyro = ["pyro4"]
qpid = ["qpid-python (>=0.26)", "qpid-tools (>=0.26)"]
redis = ["redis (>=4.5.2,!=4.5.5,<6.0.0)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
sqlalchemy = ["sqlalchemy (>=1.4.48,<2.1)"]
sqs = ["boto3 (>=1.26.143)", "urllib3 (>=1.26.16)", "pycurl (>=7.43.0.5)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=2.8.0)"]

[[package]]
name = "kubi-ecs-logger"
version = "0.1.2"
description = "Logger based on Elasticsearch Common Schema."
category = "main"
optional = false
python-versions = ">=3.6, <4"

[package.dependencies]
marshmallow = "3.19.0"

[[package]]
name = "markupsafe"
version = "2.1.3"
description = "Safely add untrusted strings to HTML/XML markup."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "marshmallow"
version = "3.19.0"
description = "A lightweight library for converting complex datatypes to and from native Python datatypes."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=17.0"

[package.extras]
dev = ["pytest", "pytz", "simplejson", "mypy (==0.990)", "flake8 (==5.0.4)", "flake8-bugbear (==22.10.25)", "pre-commit (>=2.4,<3.0)", "tox"]
docs = ["sphinx (==5.3.0)", "sphinx-issues (==3.0.1)", "alabaster (==0.7.12)", "sphinx-version-warning (==1.1.2)", "autodocsumm (==0.2.9)"]
lint = ["mypy (==0.990)", "flake8 (==5.0.4)", "flake8-bugbear (==22.10.25)", "pre-commit (>=2.4,<3.0)"]
tests = ["pytest", "pytz", "simplejson"]

[[package]]
name = "matplotlib-inline"
version = "0.1.6"
description = "Inline Matplotlib backend for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
traitlets = "*"

[[package]]
name = "mccabe"
version = "0.6.1"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "mock"
version = "4.0.3"
description = "Rolling backport of unittest.mock for all Pythons"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
build = ["twine", "wheel", "blurb"]
docs = ["sphinx"]
test = ["pytest (<5.4)", "pytest-cov"]

[[package]]
name = "mohawk"
version = "1.1.0"
description = "Library for Hawk HTTP authorization"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "moto"
version = "2.2.16"
description = "A library that allows your python tests to easily mock out the boto library"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
boto3 = ">=1.9.201"
botocore = ">=1.12.201"
cryptography = ">=3.3.1"
Jinja2 = ">=2.10.1"
MarkupSafe = "!=2.0.0a1"
python-dateutil = ">=2.1,<3.0.0"
pytz = "*"
requests = ">=2.5"
responses = ">=0.9.0"
werkzeug = "*"
xmltodict = "*"

[package.extras]
all = ["PyYAML (>=5.1)", "python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)", "docker (>=2.5.1)", "jsondiff (>=1.1.2)", "aws-xray-sdk (>=0.93,!=0.96)", "idna (>=2.5,<4)", "cfn-lint (>=0.4.0)", "sshpubkeys (>=3.1.0)", "setuptools"]
apigateway = ["python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)"]
awslambda = ["docker (>=2.5.1)"]
batch = ["docker (>=2.5.1)"]
cloudformation = ["docker (>=2.5.1)", "PyYAML (>=5.1)", "cfn-lint (>=0.4.0)"]
cognitoidp = ["python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)"]
ds = ["sshpubkeys (>=3.1.0)"]
dynamodb2 = ["docker (>=2.5.1)"]
dynamodbstreams = ["docker (>=2.5.1)"]
ec2 = ["sshpubkeys (>=3.1.0)"]
efs = ["sshpubkeys (>=3.1.0)"]
iotdata = ["jsondiff (>=1.1.2)"]
route53resolver = ["sshpubkeys (>=3.1.0)"]
s3 = ["PyYAML (>=5.1)"]
server = ["PyYAML (>=5.1)", "python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)", "docker (>=2.5.1)", "jsondiff (>=1.1.2)", "aws-xray-sdk (>=0.93,!=0.96)", "idna (>=2.5,<4)", "cfn-lint (>=0.4.0)", "sshpubkeys (>=3.1.0)", "setuptools", "flask", "flask-cors"]
ssm = ["PyYAML (>=5.1)", "dataclasses"]
xray = ["aws-xray-sdk (>=0.93,!=0.96)", "setuptools"]

[[package]]
name = "mypy-extensions"
version = "1.0.0"
description = "Type system extensions for programs checked with the mypy type checker."
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "notifications-python-client"
version = "6.0.2"
description = "Python API client for GOV.UK Notify."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
docopt = ">=0.3.0"
PyJWT = ">=1.5.1"
requests = ">=2.0.0"

[[package]]
name = "numpy"
version = "1.24.4"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "numpy"
version = "1.25.2"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "oauthlib"
version = "3.2.2"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = ["cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
signedtoken = ["cryptography (>=3.0.0)", "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "packaging"
version = "23.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pandas"
version = "2.0.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.20.3", markers = "python_version < \"3.10\""},
    {version = ">=1.21.0", markers = "python_version >= \"3.10\""},
    {version = ">=1.23.2", markers = "python_version >= \"3.11\""},
]
python-dateutil = ">=2.8.2"
pytz = ">=2020.1"
tzdata = ">=2022.1"

[package.extras]
all = ["beautifulsoup4 (>=4.9.3)", "bottleneck (>=1.3.2)", "brotlipy (>=0.7.0)", "fastparquet (>=0.6.3)", "fsspec (>=2021.07.0)", "gcsfs (>=2021.07.0)", "html5lib (>=1.1)", "hypothesis (>=6.34.2)", "jinja2 (>=3.0.0)", "lxml (>=4.6.3)", "matplotlib (>=3.6.1)", "numba (>=0.53.1)", "numexpr (>=2.7.3)", "odfpy (>=1.4.1)", "openpyxl (>=3.0.7)", "pandas-gbq (>=0.15.0)", "psycopg2 (>=2.8.6)", "pyarrow (>=7.0.0)", "pymysql (>=1.0.2)", "PyQt5 (>=5.15.1)", "pyreadstat (>=1.1.2)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pytest-asyncio (>=0.17.0)", "python-snappy (>=0.6.0)", "pyxlsb (>=1.0.8)", "qtpy (>=2.2.0)", "scipy (>=1.7.1)", "s3fs (>=2021.08.0)", "SQLAlchemy (>=1.4.16)", "tables (>=3.6.1)", "tabulate (>=0.8.9)", "xarray (>=0.21.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=1.4.3)", "zstandard (>=0.15.2)"]
aws = ["s3fs (>=2021.08.0)"]
clipboard = ["PyQt5 (>=5.15.1)", "qtpy (>=2.2.0)"]
compression = ["brotlipy (>=0.7.0)", "python-snappy (>=0.6.0)", "zstandard (>=0.15.2)"]
computation = ["scipy (>=1.7.1)", "xarray (>=0.21.0)"]
excel = ["odfpy (>=1.4.1)", "openpyxl (>=3.0.7)", "pyxlsb (>=1.0.8)", "xlrd (>=2.0.1)", "xlsxwriter (>=1.4.3)"]
feather = ["pyarrow (>=7.0.0)"]
fss = ["fsspec (>=2021.07.0)"]
gcp = ["gcsfs (>=2021.07.0)", "pandas-gbq (>=0.15.0)"]
hdf5 = ["tables (>=3.6.1)"]
html = ["beautifulsoup4 (>=4.9.3)", "html5lib (>=1.1)", "lxml (>=4.6.3)"]
mysql = ["SQLAlchemy (>=1.4.16)", "pymysql (>=1.0.2)"]
output_formatting = ["jinja2 (>=3.0.0)", "tabulate (>=0.8.9)"]
parquet = ["pyarrow (>=7.0.0)"]
performance = ["bottleneck (>=1.3.2)", "numba (>=0.53.1)", "numexpr (>=2.7.1)"]
plot = ["matplotlib (>=3.6.1)"]
postgresql = ["SQLAlchemy (>=1.4.16)", "psycopg2 (>=2.8.6)"]
spss = ["pyreadstat (>=1.1.2)"]
sql-other = ["SQLAlchemy (>=1.4.16)"]
test = ["hypothesis (>=6.34.2)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pytest-asyncio (>=0.17.0)"]
xml = ["lxml (>=4.6.3)"]

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["docopt", "pytest (<6.0.0)"]

[[package]]
name = "pathspec"
version = "0.11.2"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pexpect"
version = "4.8.0"
description = "Pexpect allows easy control of interactive console applications."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pickleshare"
version = "0.7.5"
description = "Tiny 'shelve'-like database with concurrency support"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "platformdirs"
version = "3.11.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.1.1)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.11.1)", "pytest (>=7.4)"]

[[package]]
name = "pluggy"
version = "1.3.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "prompt-toolkit"
version = "3.0.39"
description = "Library for building powerful interactive command lines in Python"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "psycopg2-binary"
version = "2.9.5"
description = "psycopg2 - Python-PostgreSQL Database Adapter"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.2"
description = "Safely evaluate AST nodes without side effects"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycodestyle"
version = "2.6.0"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pyflakes"
version = "2.2.0"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pygments"
version = "2.16.1"
description = "Pygments is a syntax highlighting package written in Python."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
plugins = ["importlib-metadata"]

[[package]]
name = "pyjwt"
version = "2.8.0"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
crypto = ["cryptography (>=3.4.0)"]
dev = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface", "cryptography (>=3.4.0)", "pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)", "pre-commit"]
docs = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
name = "pylint"
version = "3.0.2"
description = "python code static checker"
category = "dev"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
astroid = ">=3.0.1,<=3.1.0-dev0"
colorama = {version = ">=0.4.5", markers = "sys_platform == \"win32\""}
dill = [
    {version = ">=0.2", markers = "python_version < \"3.11\""},
    {version = ">=0.3.6", markers = "python_version >= \"3.11\""},
    {version = ">=0.3.7", markers = "python_version >= \"3.12\""},
]
isort = ">=4.2.5,<6"
mccabe = ">=0.6,<0.8"
platformdirs = ">=2.2.0"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
tomlkit = ">=0.10.1"
typing-extensions = {version = ">=3.10.0", markers = "python_version < \"3.10\""}

[package.extras]
spelling = ["pyenchant (>=3.2,<4.0)"]
testutils = ["gitpython (>3)"]

[[package]]
name = "pylint-django"
version = "2.3.0"
description = "A Pylint plugin to help Pylint understand the Django web framework"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
pylint = ">=2.0"
pylint-plugin-utils = ">=0.5"

[package.extras]
for_tests = ["coverage", "django-tables2", "factory-boy", "pytest"]
with_django = ["django"]

[[package]]
name = "pylint-plugin-utils"
version = "0.8.2"
description = "Utilities and helpers for writing Pylint plugins"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
pylint = ">=1.7"

[[package]]
name = "pytest"
version = "7.4.3"
description = "pytest: simple powerful testing with Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}
exceptiongroup = {version = ">=1.0.0rc8", markers = "python_version < \"3.11\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
tomli = {version = ">=1.0.0", markers = "python_version < \"3.11\""}

[package.extras]
testing = ["argcomplete", "attrs (>=19.2.0)", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-circleci-parallelized"
version = "0.1.0"
description = "Parallelize pytest across CircleCI workers."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pytest = "*"

[[package]]
name = "pytest-django"
version = "3.10.0"
description = "A Django plugin for pytest."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pytest = ">=3.6"

[package.extras]
docs = ["sphinx", "sphinx-rtd-theme"]
testing = ["django", "django-configurations (>=2.0)", "six"]

[[package]]
name = "pytest-forked"
version = "1.6.0"
description = "run tests in isolated forked subprocesses"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
py = "*"
pytest = ">=3.10"

[[package]]
name = "pytest-watch"
version = "4.2.0"
description = "Local continuous test runner with pytest and watchdog."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
colorama = ">=0.3.3"
docopt = ">=0.4.0"
pytest = ">=2.6.4"
watchdog = ">=0.6.0"

[[package]]
name = "pytest-xdist"
version = "2.1.0"
description = "pytest xdist plugin for distributed testing and loop-on-failing modes"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
execnet = ">=1.1"
pytest = ">=6.0.0"
pytest-forked = "*"

[package.extras]
psutil = ["psutil (>=3.0)"]
testing = ["filelock"]

[[package]]
name = "python-crontab"
version = "3.0.0"
description = "Python Crontab API"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = "*"

[package.extras]
cron-description = ["cron-descriptor"]
cron-schedule = ["croniter"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-json-logger"
version = "2.0.0"
description = "A python library adding a json log formatter"
category = "main"
optional = false
python-versions = ">=3.4"

[[package]]
name = "pytz"
version = "2023.3.post1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.1"
description = "YAML parser and emitter for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "raven"
version = "6.9.0"
description = "Raven is a client for Sentry (https://getsentry.com)"
category = "main"
optional = false
python-versions = "*"

[package.extras]
flask = ["Flask (>=0.8)", "blinker (>=1.1)"]
tests = ["Flask (>=0.8)", "Flask-Login (>=0.2.0)", "zconfig", "anyjson", "blinker (>=1.1)", "bottle", "celery (>=2.5)", "coverage (<4)", "exam (>=0.5.2)", "flake8 (==3.5.0)", "logbook", "mock", "nose", "paste", "pytest (>=3.2.0,<3.3.0)", "pytest-cov (==2.5.1)", "pytest-flake8 (==1.0.0)", "pytest-pythonpath (==0.7.2)", "pytest-timeout (==1.2.1)", "pytest-xdist (==1.18.2)", "pytz", "requests", "tornado (>=4.1,<5.0)", "tox", "unittest2", "web.py", "webob", "webtest", "wheel"]

[[package]]
name = "redis"
version = "5.0.1"
description = "Python client for Redis database and key-value store"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
async-timeout = {version = ">=4.0.2", markers = "python_full_version <= \"3.11.2\""}

[package.extras]
hiredis = ["hiredis (>=1.0.0)"]
ocsp = ["cryptography (>=36.0.1)", "pyopenssl (==20.0.1)", "requests (>=2.26.0)"]

[[package]]
name = "requests"
version = "2.31.0"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-mock"
version = "1.8.0"
description = "Mock out responses from the requests package"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=2.3,<3"
six = "*"

[package.extras]
fixture = ["fixtures"]
test = ["fixtures", "mock", "purl", "pytest", "sphinx", "testrepository (>=0.0.18)", "testtools"]

[[package]]
name = "requests-oauthlib"
version = "1.3.1"
description = "OAuthlib authentication support for Requests."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
oauthlib = ">=3.0.0"
requests = ">=2.0.0"

[package.extras]
rsa = ["oauthlib[signedtoken] (>=3.0.0)"]

[[package]]
name = "requests-toolbelt"
version = "0.9.1"
description = "A utility belt for advanced users of python-requests"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=2.0.1,<3.0.0"

[[package]]
name = "responses"
version = "0.24.0"
description = "A utility library for mocking out the `requests` Python library."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pyyaml = "*"
requests = ">=2.30.0,<3.0"
urllib3 = ">=1.25.10,<3.0"

[package.extras]
tests = ["pytest (>=7.0.0)", "coverage (>=6.0.0)", "pytest-cov", "pytest-asyncio", "pytest-httpserver", "flake8", "types-pyyaml", "types-requests", "mypy", "tomli-w", "tomli"]

[[package]]
name = "s3transfer"
version = "0.4.2"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "sentry-sdk"
version = "1.14.0"
description = "Python client for Sentry (https://sentry.io)"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
certifi = "*"
urllib3 = {version = ">=1.26.11", markers = "python_version >= \"3.6\""}

[package.extras]
aiohttp = ["aiohttp (>=3.5)"]
beam = ["apache-beam (>=2.12)"]
bottle = ["bottle (>=0.12.13)"]
celery = ["celery (>=3)"]
chalice = ["chalice (>=1.16.0)"]
django = ["django (>=1.8)"]
falcon = ["falcon (>=1.4)"]
fastapi = ["fastapi (>=0.79.0)"]
flask = ["flask (>=0.11)", "blinker (>=1.1)"]
httpx = ["httpx (>=0.16.0)"]
opentelemetry = ["opentelemetry-distro (>=0.35b0)"]
pure_eval = ["pure-eval", "executing", "asttokens"]
pymongo = ["pymongo (>=3.1)"]
pyspark = ["pyspark (>=2.4.4)"]
quart = ["quart (>=0.16.1)", "blinker (>=1.1)"]
rq = ["rq (>=0.6)"]
sanic = ["sanic (>=0.8)"]
sqlalchemy = ["sqlalchemy (>=1.2)"]
starlette = ["starlette (>=0.19.1)"]
starlite = ["starlite (>=1.48)"]
tornado = ["tornado (>=5)"]

[[package]]
name = "simplejson"
version = "3.17.2"
description = "Simple, fast, extensible JSON encoder/decoder for Python"
category = "dev"
optional = false
python-versions = ">=2.5, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "sqlparse"
version = "0.4.4"
description = "A non-validating SQL parser."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["flake8", "build"]
doc = ["sphinx"]
test = ["pytest", "pytest-cov"]

[[package]]
name = "stack-data"
version = "0.6.3"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = ">=2.1.0"
executing = ">=1.2.0"
pure-eval = "*"

[package.extras]
tests = ["pytest", "typeguard", "pygments", "littleutils", "cython"]

[[package]]
name = "time-machine"
version = "2.13.0"
description = "Travel through time in your tests."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
python-dateutil = "*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tomlkit"
version = "0.12.2"
description = "Style preserving TOML library"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "traitlets"
version = "5.13.0"
description = "Traitlets Python configuration system"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx"]
test = ["argcomplete (>=3.0.3)", "mypy (>=1.6.0)", "pre-commit", "pytest-mock", "pytest-mypy-testing", "pytest (>=7.0,<7.5)"]

[[package]]
name = "types-awscrt"
version = "0.19.9"
description = "Type annotations and code completion for awscrt"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "typing-extensions"
version = "4.8.0"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tzdata"
version = "2023.3"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "urllib3"
version = "1.26.18"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (==1.0.9)", "brotlipy (>=0.6.0)", "brotli (>=1.0.9)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "urlobject"
version = "2.4.3"
description = "A utility class for manipulating URLs."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "vine"
version = "5.1.0"
description = "Python promises."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "watchdog"
version = "3.0.0"
description = "Filesystem events monitoring"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
watchmedo = ["PyYAML (>=3.10)"]

[[package]]
name = "wcwidth"
version = "0.2.9"
description = "Measures the displayed width of unicode strings in a terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "werkzeug"
version = "3.0.1"
description = "The comprehensive WSGI web application library."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
MarkupSafe = ">=2.1.1"

[package.extras]
watchdog = ["watchdog (>=2.3)"]

[[package]]
name = "whitenoise"
version = "5.2.0"
description = "Radically simplified static file serving for WSGI applications"
category = "main"
optional = false
python-versions = ">=3.5, <4"

[package.extras]
brotli = ["brotli"]

[[package]]
name = "wrapt"
version = "1.16.0"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "xmltodict"
version = "0.13.0"
description = "Makes working with XML feel like you are working with JSON"
category = "dev"
optional = false
python-versions = ">=3.4"

[[package]]
name = "zipp"
version = "3.17.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "zope.event"
version = "5.0"
description = "Very basic event publishing system"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx"]
test = ["zope.testrunner"]

[[package]]
name = "zope.interface"
version = "6.1"
description = "Interfaces for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "repoze.sphinx.autointerface", "sphinx-rtd-theme"]
test = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]
testing = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]

[metadata]
lock-version = "1.1"
python-versions = "^3.8"
content-hash = "27f183b9365be6377cea7d81c521acaf3d13565af0c4fcb41958e39a3bdac342"

[metadata.files]
amqp = []
appnope = []
asgiref = []
astroid = []
asttokens = []
async-timeout = []
backcall = []
"backports.zoneinfo" = []
billiard = []
black = []
boto3 = []
boto3-stubs = []
botocore = []
botocore-stubs = []
celery = []
certifi = []
cffi = []
charset-normalizer = []
click = []
click-didyoumean = []
click-plugins = []
click-repl = []
colorama = []
coverage = []
cryptography = []
decorator = []
deprecated = []
dill = []
dj-database-url = []
django = []
django-audit-log-middleware = []
django-celery-beat = []
django-environ = []
django-extensions = []
django-filter = []
django-hashid-field = []
django-ipware = []
django-log-formatter-ecs = []
django-model-utils = []
django-oauth-toolkit = []
django-ordered-model = []
django-pglocks = []
django-redis = []
django-simple-history = []
django-staff-sso-client = []
django-timezone-field = []
djangorestframework = []
docopt = []
elastic-apm = []
exceptiongroup = []
execnet = []
executing = []
factory-boy = []
faker = []
flake8 = []
freezegun = []
gevent = []
greenlet = []
gunicorn = []
hashids = []
hawkrest = []
idna = []
importlib-metadata = []
iniconfig = []
ipdb = []
ipython = []
isort = []
jedi = []
jinja2 = []
jmespath = []
jsondiff = []
jwcrypto = []
kombu = []
kubi-ecs-logger = []
markupsafe = []
marshmallow = []
matplotlib-inline = []
mccabe = []
mock = []
mohawk = []
moto = []
mypy-extensions = []
notifications-python-client = []
numpy = []
oauthlib = []
packaging = []
pandas = []
parso = []
pathspec = []
pexpect = []
pickleshare = []
platformdirs = []
pluggy = []
prompt-toolkit = []
psycopg2-binary = []
ptyprocess = []
pure-eval = []
py = []
pycodestyle = []
pycparser = []
pyflakes = []
pygments = []
pyjwt = []
pylint = []
pylint-django = []
pylint-plugin-utils = []
pytest = []
pytest-circleci-parallelized = []
pytest-django = []
pytest-forked = []
pytest-watch = []
pytest-xdist = []
python-crontab = []
python-dateutil = []
python-json-logger = []
pytz = []
pyyaml = []
raven = []
redis = []
requests = []
requests-mock = []
requests-oauthlib = []
requests-toolbelt = []
responses = []
s3transfer = []
sentry-sdk = []
simplejson = []
six = []
sqlparse = []
stack-data = []
time-machine = []
tomli = []
tomlkit = []
traitlets = []
types-awscrt = []
typing-extensions = []
tzdata = []
urllib3 = []
urlobject = []
vine = []
watchdog = []
wcwidth = []
werkzeug = []
whitenoise = []
wrapt = []
xmltodict = []
zipp = []
"zope.event" = []
"zope.interface" = []
