services:
  db:
    image: postgres:13
    volumes:
      - ./db:/var/lib/postgresql/data:delegated
      - ./db_dumps:/var/lib/postgresql/dumps:delegated
      - ./docker/local/postgres:/docker-entrypoint-initdb.d:delegated
    ports:
      - "8881:5432"
    env_file: docker-compose.env
    networks:
      - webnet

  web:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    entrypoint: docker/local/entrypoint.sh
    volumes:
      - .:/usr/src/app:delegated
    env_file: docker-compose.env
    # Running the main service directly within the contain is helpful
    command: python3.9 ./manage.py runserver 0:8000
    ports:
      - "8880:8000"
      - "8882:22"
    depends_on:
      - db
      # - comtrade_test_db
    networks:
      - webnet

  redis:
    image: redis
    ports:
      - "8889:6379"
    networks:
      - webnet

  mocksso:
    image: ukti/mock-sso
    environment:
      MOCK_SSO_PORT: "8888"
      MOCK_SSO_SCOPE: "test"
      MOCK_SSO_USERNAME: "test-user"
      MOCK_SSO_TOKEN: "jkl-mno-pqr"
      MOCK_SSO_EMAIL_USER_ID: "your@email.here"
    ports:
      - "8888:8888"
    networks:
      - webnet

  celery_worker:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    command: celery -A config.celery worker -l INFO
    volumes:
      - .:/usr/src/app:delegated
    env_file: docker-compose.env
    depends_on:
      - redis
      - db
    networks:
      - webnet

  celery_beat:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    command: celery -A config.celery beat -l INFO
    volumes:
      - .:/usr/src/app:delegated
    env_file: docker-compose.env
    depends_on:
      - redis
      - db
    networks:
      - webnet

  flower:
    image: mher/flower
    container_name: flower
    command: celery flower
    environment:
      - CELERY_BROKER=redis://redis:6379/1
      - FLOWER_PORT=8777
    ports:
      - "8777:8777"
    networks:
      - webnet

networks:
  webnet:
