version: '3.7'

services:

  db:
    image: postgres
    volumes:
      - ./db:/var/lib/postgresql/data:delegated
      - ./db_dumps:/var/lib/postgresql/dumps:delegated
      - ./docker/local/postgres:/docker-entrypoint-initdb.d:delegated
    ports:
      - "8881:5432"
    env_file: docker-compose.env
    networks:
      - webnet

  comtrade:
    image: postgres
    build:
      context: ./comtrade_db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=comtrade_user
      - POSTGRES_DB=comtrade
      - FAKE_METADATA=True
      - DH_METADATA_URL=https://datahub-api-dev.london.cloudapps.digital/v4/metadata/

    volumes:
      - ./comtrade_data:/var/lib/comtrade_postgresql/data
      - ./db_dumps:/var/lib/comtrade_postgresql/dumps
      # - ./docker/local/postgres:/docker-entrypoint-initdb.d:delegated
      # - ./comtrade_db:db.dump.sql
      # - ./comtrade_db:/init-db.sh
    ports:
      - "8883:5432"

    networks:
      - webnet

  web:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    entrypoint: dockerize -wait tcp://db:5432 -timeout 60s docker/local/entrypoint.sh
    volumes:
      - .:/usr/src/app:delegated
    env_file: docker-compose.env
    ports:
      - "8880:8000"
      - "8882:22"
    depends_on:
      - db
      - comtrade
    networks:
      - webnet

  redis:
    image: redis
    ports:
      - "8889:6379"
    networks:
      - webnet

  mocksso:
    image: ukti/mock-sso
    environment:
      MOCK_SSO_PORT: "8888"
      MOCK_SSO_SCOPE: "test"
      MOCK_SSO_USERNAME: "test-user"
      MOCK_SSO_TOKEN: "jkl-mno-pqr"
    ports:
      - "8888:8888"
    networks:
      - webnet

networks:
  webnet:
