# Generated by Django 3.2.20 on 2023-12-04 15:36
import datetime
from django.db import migrations

def unassign_ni_protocol_tag(apps, schema_editor):
    BarrierTag = apps.get_model("metadata", "BarrierTag")
    Barrier = apps.get_model("barriers", "Barrier")
    HistoricalBarrier = apps.get_model("barriers", "HistoricalBarrier")

    ni_protocol_tag = BarrierTag.objects.get(title="NI Protocol")
    barriers = Barrier.objects.filter(tags=ni_protocol_tag.id)
    for barrier in barriers:
        barrier.tags.remove(ni_protocol_tag.id)
        barrier.save()

        try:
            historical_instance = HistoricalBarrier.objects.filter(id=barrier.pk).latest()
            historical_instance.pk = None
            historical_instance.save()
            # this new tags_cache will just contain the previous list of tags, minus the one we just removed
            historical_instance.tags_cache = list(barrier.tags.values_list("id", flat=True))
            # setting the history_date to be 1 second after the previous historical record, so it counts as a new one
            historical_instance.history_date = (
                datetime.timedelta(seconds=1) + historical_instance.history_date
            )
            historical_instance.save()
        except HistoricalBarrier.DoesNotExist:
            pass

class Migration(migrations.Migration):

    dependencies = [
        ('metadata', '0043_auto_20231204_1530'),
    ]

    operations = [
        migrations.RunPython(
            unassign_ni_protocol_tag,
        ),
    ]
