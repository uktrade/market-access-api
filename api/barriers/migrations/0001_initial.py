# Generated by Django 2.0.5 on 2018-07-13 13:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('metadata', '0003_auto_20180705_1132'),
        ('reports', '0015_auto_20180712_1156'),
    ]

    operations = [
        migrations.CreateModel(
            name='BarrierContributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('INITIATOR', 'INITIATOR'), ('CONTRIBUTOR', 'CONTRIBUTOR'), ('LEAD', 'LEAD')], max_length=25)),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BarrierInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('summary', models.TextField(help_text='summary of barrier')),
                ('chance_of_success', models.CharField(choices=[('HIGHLY_LIKELY', 'HIGHLY_LIKELY'), ('LIKELY', 'LIKELY'), ('UNLIKELY', 'UNLIKELY'), ('HIGHLY_UNLIKELY', 'HIGHLY_UNLIKELY')], help_text='chance of success', max_length=25, null=True)),
                ('chance_of_success_summary', models.TextField(help_text='Give an explanation of your choice', null=True)),
                ('estimated_loss_range', models.PositiveIntegerField(choices=[(1, 'Less than £1m'), (2, '£1m to £10m'), (3, '£10m to £100m'), (4, 'Over £100m')], help_text='Estimated financial value of sales lost over a five year period')),
                ('impact_summary', models.TextField(help_text='Impact the problem expected to have on the company if it is not resolved', null=True)),
                ('other_companies_affected', models.NullBooleanField(help_text='Are there other companies affected?')),
                ('has_legal_infringement', models.PositiveIntegerField(choices=[(1, 'Yes'), (2, 'No'), (3, "Don't know")], help_text='Legal obligations infringed')),
                ('wto_infringement', models.NullBooleanField(help_text='Legal obligations infringed')),
                ('fta_infringement', models.NullBooleanField(help_text='Legal obligations infringed')),
                ('other_infringement', models.NullBooleanField(help_text='Legal obligations infringed')),
                ('infringement_summary', models.TextField(help_text='Summary of infringments', null=True)),
                ('reported_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('barrier_type', models.ForeignKey(help_text='market access barrier type', on_delete=django.db.models.deletion.PROTECT, related_name='barrier_barrier_type', to='metadata.BarrierType')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(help_text='originating report', on_delete=django.db.models.deletion.PROTECT, related_name='barrier_report', to='reports.Report')),
            ],
        ),
        migrations.CreateModel(
            name='BarrierInteraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('COMMENT', 'COMMENT')], max_length=25)),
                ('notes', models.TextField(null=True)),
                ('pin_it', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('barrier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='interactions', to='barriers.BarrierInstance')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BarrierStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(choices=[(0, 'Unfinished'), (1, 'Screening'), (2, 'Assesment'), (3, 'Rejected'), (4, 'Resolved'), (5, 'Hibernated'), (6, 'Archived')], help_text='status of the barrier instance')),
                ('is_active', models.BooleanField(default=True, help_text='specifies if this barrier status is current or historical')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('barrier', models.ForeignKey(help_text='barrier instance', on_delete=django.db.models.deletion.PROTECT, related_name='statuses', to='barriers.BarrierInstance')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='barriercontributor',
            name='barrier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contributors', to='barriers.BarrierInstance'),
        ),
        migrations.AddField(
            model_name='barriercontributor',
            name='contributor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contributor_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='barriercontributor',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='barrierstatus',
            unique_together={('barrier', 'status')},
        ),
    ]
