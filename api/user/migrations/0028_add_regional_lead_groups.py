# Generated by Django 3.2.7 on 2022-06-20 12:14

from django.db import migrations

# Create group "Regional Lead - <<REGION NAME>>"
# Create permission to assign regional leads and give to administrators
def add_regional_lead_groups(app, schema_editor):

    Group = app.get_model("auth", "Group")

    regions = [
        "LATAC",
        "APAC",
        "China/Hong Kong",
        "South Asia",
        "EECAN",
        "MEAP",
        "Africa",
        "North America",
        "Europe",
        "Wider Europe",
    ]

    for region in regions:
        Group.objects.create(
            name=f"Regional Lead - {region}",
        )

    Permission = app.get_model("auth", "Permission")
    ContentType = app.get_model("contenttypes", "ContentType")
    User = app.get_model("auth", "User")

    user_content_type = ContentType.objects.get_for_model(User)

    set_regionallead, created = Permission.objects.get_or_create(
        codename="set_regionallead",
        defaults={
            "name": "Can assign users to Regional Leader groups",
            "content_type": user_content_type,
        },
    )

    administrator_group = Group.objects.get(name="Administrator")
    administrator_group.permissions.add(
        set_regionallead,
    )


# Get group "Regional Lead - <<REGION NAME>>" and delete it
# Get permission "set_regionallead" and delete it
def remove_regional_lead_groups(app, schema_editor):

    regions = [
        "LATAC",
        "APAC",
        "China/Hong Kong",
        "South Asia",
        "EECAN",
        "MEAP",
        "Africa",
        "North America",
        "Europe",
        "Wider Europe",
    ]

    Group = app.get_model("auth", "Group")

    for region in regions:
        group_for_deletion = Group.objects.get(
            name=f"Regional Lead - {region}",
        )
        group_for_deletion.delete()

    Permission = app.get_model("auth", "Permission")
    set_regionallead_permission = Permission.objects.get(
        codename="set_regionallead",
    )
    set_regionallead_permission.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0027_create_permission_group_for_top_priority_barriers"),
    ]

    operations = [
        migrations.RunPython(
            code=add_regional_lead_groups,
            reverse_code=remove_regional_lead_groups,
        ),
    ]
